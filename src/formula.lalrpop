use std::str::FromStr;

use ast::{Expr, Opcode};
use reference::Reference;

grammar;

pub Formula = {
	Expr
}

Expr: Box<Expr> = {
    Expr ExprOp Factor => Box::new(Expr::Op(<>)),
    Factor,
};

ExprOp: Opcode = {
    "+" => Opcode::Add,
    "-" => Opcode::Sub,
};

Factor: Box<Expr> = {
    Factor FactorOp Term => Box::new(Expr::Op(<>)),
    Term,
};

FactorOp: Opcode = {
    "*" => Opcode::Mul,
    "/" => Opcode::Div,
};

Term: Box<Expr> = {
    Num => Box::new(Expr::Number(<>)),
    Ref => Box::new(Expr::Reference(<>)),
    "(" <Expr> ")"
};

Num: i64 = r"[0-9]+" => i64::from_str(<>).unwrap();
Ref: Reference = r"[a-zA-Z]+[0-9]+" => Reference::from_str(<>).unwrap();
